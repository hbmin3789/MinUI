<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:ctrls="clr-namespace:MinUI.Core">
	<Style TargetType="{x:Type ctrls:Accordion}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ctrls:Accordion}">
					<Grid Cursor="Hand">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="AnimationGroup">
								<VisualState x:Name="ExpandAccordion">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="PART_ContentContainer" From="0" To="1"
												Duration="0:0:0:0.2" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CollapseAccordion">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="PART_ContentContainer" From="1" To="0"
												Duration="0:0:0:0.2" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						
						<Border Effect="{DynamicResource LightThemeLightShadowEffect}" CornerRadius="5" Height="auto" Cursor="">
							<Border Background="{DynamicResource BackgroundBrush}" Effect="{DynamicResource LightThemeDarkShadowEffect}" CornerRadius="5" Cursor="">
								<Grid x:Name="PART_HeaderContainer" Cursor="Hand">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="30" />
									</Grid.ColumnDefinitions>
									<ContentPresenter />
									<!-- Expand Icon -->
									<!-- Content -->
									<Grid x:Name="PART_ContentContainer" Grid.Row="1" VerticalAlignment="Top">
										<Grid.RenderTransform>
											<ScaleTransform ScaleY="0" />
										</Grid.RenderTransform>
										<ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}" />
									</Grid>
								</Grid>
							</Border>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<EventTrigger RoutedEvent="MouseDown">
				<BeginStoryboard>
					<Storyboard>
						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsMouseDown" Duration="0:0:0">
							<BooleanAnimationUsingKeyFrames.KeyFrames>
								<DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True" />
							</BooleanAnimationUsingKeyFrames.KeyFrames>
						</BooleanAnimationUsingKeyFrames>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
			<EventTrigger RoutedEvent="MouseUp">
				<BeginStoryboard>
					<Storyboard>
						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsMouseDown" Duration="0:0:0">
							<BooleanAnimationUsingKeyFrames.KeyFrames>
								<DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False" />
							</BooleanAnimationUsingKeyFrames.KeyFrames>
						</BooleanAnimationUsingKeyFrames>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
			<EventTrigger RoutedEvent="MouseLeave">
				<BeginStoryboard>
					<Storyboard>
						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsMouseDown" Duration="0:0:0">
							<BooleanAnimationUsingKeyFrames.KeyFrames>
								<DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False" />
							</BooleanAnimationUsingKeyFrames.KeyFrames>
						</BooleanAnimationUsingKeyFrames>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>